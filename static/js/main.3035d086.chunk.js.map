{"version":3,"sources":["useFetch.js","context.js","SearchForm.js","Movies.js","Home.js","SingleMovie.js","App.js","index.js"],"names":["useFetch","urlParams","useState","isLoading","setIsLoading","show","msg","error","setError","data","setData","fetchMovies","url","a","fetch","response","json","console","log","Response","Search","Error","useEffect","AppContext","React","createContext","AppProvider","children","query","setQuery","movies","Provider","value","useGlobalContext","useContext","SearchForm","className","onSubmit","e","preventDefault","type","onChange","target","Movies","map","movie","id","imdbID","poster","Poster","title","Title","year","Year","to","key","src","alt","Home","SingleMovie","useParams","plot","Plot","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3035d086.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nconst API_ENDPOINT = `https://www.omdbapi.com/?apikey=b2603a45`\n\nconst useFetch = (urlParams) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState({ show: false, msg: '' })\n  const [data, setData] = useState(null)\n  const fetchMovies = async (url) => {\n    setIsLoading(true)\n    try {\n      const response = await fetch(url)\n      const data = await response.json()\n      console.log(data);\n      if (data.Response === 'True') {\n        setData(data.Search || data)\n\n        setError({ show: false, msg: '' })\n      } else {\n        setError({ show: true, msg: data.Error })\n      }\n      setIsLoading(false)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  // url = https://www.omdbapi.com/?apikey=b2603a45&i=tt0372784\n  useEffect(() => {\n    fetchMovies(`${API_ENDPOINT}${urlParams}`)\n  }, [urlParams])\n  return { isLoading, error, data }\n}\n\nexport default useFetch\n","import React, { useState, useContext, useEffect } from 'react'\n// make sure to use https\nimport useFetch from './useFetch'\nexport const API_ENDPOINT = `https://www.omdbapi.com/?apikey=b2603a45`\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [query, setQuery] = useState('Batman')\n  const { isLoading, error, data: movies } = useFetch(`&s=${query}`)\n\n  return (\n    <AppContext.Provider value={{ isLoading, error, movies, query, setQuery }}>\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\nconst SearchForm = () => {\n  const { query, setQuery, error } = useGlobalContext()\n  return (\n    <form className='search-form' onSubmit={(e) => e.preventDefault()}>\n      <h2>search movies</h2>\n      <input\n        type='text '\n        className='form-input'\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n      />\n      {error.show && <div className='error'>{error.msg}</div>}\n    </form>\n  )\n}\n\nexport default SearchForm\n","import React from 'react'\nimport { useGlobalContext } from './context'\nimport { Link } from 'react-router-dom'\nconst url =\n  'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png'\n\nconst Movies = () => {\n  const { movies, isLoading } = useGlobalContext()\n\n  if (isLoading) {\n    return <div className='loading'></div>\n  }\n  return (\n    <section className='movies'>\n      {movies.map((movie) => {\n        const { imdbID: id, Poster: poster, Title: title, Year: year } = movie\n\n        return (\n          <Link to={`/movies/${id}`} key={id} className='movie'>\n            <article>\n              <img src={poster === 'N/A' ? url : poster} alt={title} />\n              <div className='movie-info'>\n                <h4 className='title'>{title}</h4>\n                <p>{year}</p>\n              </div>\n            </article>\n          </Link>\n        )\n      })}\n    </section>\n  )\n}\n\nexport default Movies\n","import React from 'react'\nimport Form from './SearchForm'\nimport Movies from './Movies'\nconst Home = () => {\n  return (\n    <main>\n      <Form />\n      <Movies />\n    </main>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { API_ENDPOINT } from './context'\nimport useFetch from './useFetch'\nconst SingleMovie = () => {\n  const { id } = useParams()\n  console.log(id);\n  const { isLoading, error, data: movie } = useFetch(`&i=${id}`)\n\n  if (isLoading) {\n    return <div className='loading'></div>\n  }\n  if (error.show) {\n    return (\n      <div className='page-error'>\n        <h1>{error.msg}</h1>\n        <Link to='/' className='btn'>\n          back to movies\n        </Link>\n      </div>\n    )\n  }\n  const { Poster: poster, Title: title, Plot: plot, Year: year } = movie\n  return (\n    <section className='single-movie'>\n      <img src={poster} alt={title} />\n      <div className='single-movie-info'>\n        <h2>{title}</h2>\n        <p>{plot}</p>\n        <h4>{year}</h4>\n        <Link to='/' className='btn'>\n          back to movies\n        </Link>\n      </div>\n    </section>\n  )\n}\n\nexport default SingleMovie\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport Movie from './SingleMovie'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Home />\n      </Route>\n      <Route path='/movies/:id' children={<Movie />} />\n    </Switch>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <Router>\n        <App />\n      </Router>\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}